version: "3.8"
services:
  database:
    container_name: database
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: "cicd"
      MYSQL_USERNAME: "root"
      MYSQL_PASSWORD: "dev"
      MYSQL_ROOT_PASSWORD: "dev"
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - mysql-db:/var/lib/mysql

  api:
    container_name: api
    tty: true
    restart: always
    build: ./../../../src/components/api/src/
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./../../../src/components/api/src/:/src/
    environment:
      DB_HOST: "database"
      DB_NAME: "cicd"
      DB_USER: "root"
      DB_PASSWORD: "dev"
      DEBUG: true
      BROKER_USER: "dev"
      BROKER_PASSWORD: "dev"
      BROKER_URL: "message"
      BROKER_PORT: 5672
      TAPIS_TENANT: "tacc"
      DJANGO_SUPERUSER_USERNAME: "nathandf"
      DJANGO_SUPERUSER_EMAIL: "nfreeman@tacc.utexas.edu"
      DJANGO_SUPERUSER_PASSWORD: "dev"
    ports:
      - "8000:8000"
    depends_on:
      - database

  message:
    container_name: message
    image: rabbitmq:3.9.11-management
    environment:
      RABBITMQ_DEFAULT_USER: "dev"
      RABBITMQ_DEFAULT_PASS: "dev"
    ports:
    - "5672:5672"
    - "15672:15672"

  pipelines:
    container_name: pipelines
    tty: true
    build: ./../../../src/components/pipelines/src/
    command: python3 main.py
    restart: always
    volumes:
      - ./../../../src/components/pipelines/src/:/src/
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/:/tmp/
    environment:
      API_BASE_URL: "localhost:8000"
      BROKER_USER: "dev"
      BROKER_PASSWORD: "dev"
      BROKER_URL: "message"
      BROKER_PORT: 5672
      DB_HOST: "database"
      DB_NAME: "tasks"
      DB_USER: "root"
      DB_PASSWORD: "dev"
      DB_PORT: 3306
      DEPLOYMENT_TYPE: "docker"
      REGISTRY_HOST: registry
      REGISTRY_PORT: 5000
    deploy:
        resources:
            limits:
              cpus: "1"
              memory: 5G
    ports:
      - "9000:9000"
    depends_on:
      - message

  # registry:
  #   container_name: registry
  #   image: registry:2
  #   restart: always
  #   volumes:
  #     - ./../../../deployment/local/.volumes/docker/docker-registry:/var/lib/registry
  #   ports:
  #     - "5000:5000"

  # registry-ui:
  #   container_name: registry-ui
  #   image: konradkleine/docker-registry-frontend:v2
  #   ports:
  #     - "8080:80"
  #   environment:
  #     ENV_DOCKER_REGISTRY_HOST: registry
  #     ENV_DOCKER_REGISTRY_PORT: 5000

volumes:
  mysql-db:
  kaniko-data:
    
