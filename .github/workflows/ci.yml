name: Workflows CI

on:
  push:
    branches: [ dev, stage, release-* ]
  pull_request:
    branches: [ dev, stage, release-* ]

jobs:
  api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest
    steps:
      - run: "echo 'running API tests'"

  build-push-workflows-pipelines:
    name: Build/Test/Push Pipelines Image
    runs-on: ubuntu-latest
    steps:
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_REF#refs/heads/}" >> GITHUB_OUTPUT
      id: extract_branch
    - name: Checkout
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.TAPIS_DOCKERHUB_USERNAME }}
        password: ${{ secrets.TAPIS_DOCKERHUB_ACCESS_TOKEN }}
    - name: Build Non-production Workflows Pipelines Docker image
      if: ${{ !contains(steps.extract_branch.outputs.branch, 'release-') }}
      run: docker build -f src/pipelines/src/Dockerfile -t tapis/workflows-pipelines:${{ steps.extract_branch.outputs.branch }} .
    - name: Extract version of production release
      if: ${{ contains(steps.extract_branch.outputs.branch, 'release-') }}
      shell: bash
      run: echo "##[set-output name=version;]$(if [[ ${{ steps.extract_branch.outputs.branch }} == 'release-'* ]]; then echo ${{ steps.extract_branch.outputs.branch }} | sed -e 's!release-!!'; fi;)"
      id: extract_version
    ## TODO Only push the images related to the current branch or prodcution version
    # - name: Set Image Tag
    #   run: echo "${{ steps.extract_version.outputs.version }}" >> $IMAGE_TAG
    - name: Build Production Workflows Pipelines Docker image
      if: ${{ contains(steps.extract_branch.outputs.branch, 'release-') }}
      run: docker build -f src/pipelines/src/Dockerfile -t tapis/workflows-pipelines:${{ steps.extract_version.outputs.version }} .
    - name: Push the image to dockerhub with latest tag
      run: docker push --all-tags tapis/workflows-pipelines

  build-push-workflows-api:
    name: Build/Test/Push API Image
    runs-on: ubuntu-latest
    steps:
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Checkout
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.TAPIS_DOCKERHUB_USERNAME }}
        password: ${{ secrets.TAPIS_DOCKERHUB_ACCESS_TOKEN }}
    - name: Build Non-production Workflows API Docker image
      if: ${{ !contains(steps.extract_branch.outputs.branch, 'release-') }}
      run: docker build -f src/api/src/Dockerfile -t tapis/workflows-api:${{ steps.extract_branch.outputs.branch }} .
    - name: Extract version of production release
      if: ${{ contains(steps.extract_branch.outputs.branch, 'release-') }}
      shell: bash
      run: echo "##[set-output name=version;]$(if [[ ${{ steps.extract_branch.outputs.branch }} == 'release-'* ]]; then echo ${{ steps.extract_branch.outputs.branch }} | sed -e 's!release-!!'; fi;)"
      id: extract_version
    - name: Build Production Workflows Pipelines Docker image
      if: ${{ contains(steps.extract_branch.outputs.branch, 'release-') }}
      run: docker build -f src/api/src/Dockerfile -t tapis/workflows-api:${{ steps.extract_version.outputs.version }} .
    - name: Push the image to dockerhub
      run: docker push --all-tags tapis/workflows-api