name: Docker Image CI

on:
  push:
    branches: [ test, dev, staging, main ]
  pull_request:
    branches: [ test, dev, staging, main ]

jobs:

  api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest
    steps:
        - run: "echo 'running API tests'"

  build-push-workflows-pipelines:
    name: Build/Push Pipelines Image
    runs-on: ubuntu-latest
    steps:
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Checkout
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.TAPIS_DOCKERHUB_USERNAME }}
        password: ${{ secrets.TAPIS_DOCKERHUB_ACCESS_TOKEN }}
    - name: Build the Workflows Pipelines Docker image
      run: docker build -f src/components/pipelines/src/Dockerfile -t tapis/workflows-pipelines:${{ steps.extract_branch.outputs.branch }} src/components/pipelines/src/
    # if tag == prod release, tag as latest 
    - name: Build the Workflows Pipelines Docker image with latest tag
      if: ${{ steps.extract_branch.outputs.branch == 'main' }}
      run: docker build . --file Dockerfile --tag tapis/workflows-pipelines:latest #--tag tapis/workflows-pipelines:1.2

    - name: Push the image to dockerhub with latest tag
      run: docker push --all-tags tapis/workflows-pipelines

  build-push-workflows-api:
    name: Build/Push API Image
    runs-on: ubuntu-latest
    steps:
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Checkout
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.TAPIS_DOCKERHUB_USERNAME }}
        password: ${{ secrets.TAPIS_DOCKERHUB_ACCESS_TOKEN }}
    - name: Build the Workflows API Docker image
      run: docker build -f src/components/api/src/Dockerfile -t tapis/workflows-api:${{ steps.extract_branch.outputs.branch }} src/components/api/src/
    # if tag == prod release, tag as latest 
    - name: Build the Workflows API Docker image with latest tag
      if: ${{ steps.extract_branch.outputs.branch == 'main' }}
      run: docker build . --file Dockerfile --tag tapis/workflows-api:latest #--tag tapis/workflows-pipelines:1.2
    - name: Push the image to dockerhub with latest tag
      run: docker push --all-tags tapis/workflows-api