# Generated by Django 4.0.1 on 2022-04-29 19:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.CharField(max_length=128)),
                ('auto_build', models.BooleanField(null=True)),
                ('builder', models.CharField(choices=[('kaniko', 'kaniko')], max_length=32, null=True)),
                ('cache', models.BooleanField(null=True)),
                ('depends_on', models.JSONField(default=list, null=True)),
                ('description', models.TextField(null=True)),
                ('data', models.JSONField(null=True)),
                ('headers', models.JSONField(null=True)),
                ('http_method', models.CharField(choices=[('get', 'get'), ('post', 'post'), ('put', 'put'), ('patch', 'patch'), ('delete', 'delete')], max_length=32, null=True)),
                ('image', models.CharField(max_length=128, null=True)),
                ('input', models.JSONField(null=True)),
                ('output', models.JSONField(null=True)),
                ('poll', models.BooleanField(null=True)),
                ('query_params', models.JSONField(null=True)),
                ('retries', models.IntegerField(default=0)),
                ('tapis_job_def', models.JSONField(null=True)),
                ('tapis_actor_id', models.CharField(max_length=128, null=True)),
                ('type', models.CharField(choices=[('image_build', 'image_build'), ('container_run', 'container_run'), ('webhook_notification', 'webhook_notification'), ('tapis_job', 'tapis_job'), ('tapis_actor', 'tapis_actor')], max_length=32)),
                ('ttl', models.BigIntegerField(default=3600, validators=[django.core.validators.MaxValueValidator(10800), django.core.validators.MinValueValidator(1)])),
                ('url', models.CharField(max_length=255, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Build',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('queued', 'queued'), ('in_progress', 'in_progress'), ('pushing', 'pushing'), ('error', 'error'), ('success', 'success')], default='queued', max_length=32)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Context',
            fields=[
                ('branch', models.CharField(max_length=128)),
                ('dockerfile_path', models.CharField(default='Dockerfile', max_length=255)),
                ('sub_path', models.CharField(max_length=255, null=True)),
                ('type', models.CharField(choices=[('github', 'github'), ('gitlab', 'gitlab')], max_length=32)),
                ('url', models.CharField(max_length=128)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('visibility', models.CharField(choices=[('public', 'public'), ('private', 'private')], max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('sk_id', models.CharField(max_length=128, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
            ],
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('tag', models.CharField(max_length=128)),
                ('type', models.CharField(choices=[('dockerhub', 'dockerhub')], max_length=32)),
                ('url', models.CharField(max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.CharField(max_length=255, null=True)),
                ('commit', models.TextField(max_length=255, null=True)),
                ('commit_sha', models.CharField(max_length=128, null=True)),
                ('context_url', models.CharField(max_length=128, null=True)),
                ('directives', models.JSONField(null=True)),
                ('message', models.TextField()),
                ('source', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=64)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.CharField(max_length=64)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('name', models.CharField(max_length=64)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='backend.group')),
            ],
        ),
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.CharField(max_length=64)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipelines', to='backend.group')),
            ],
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('type', models.CharField(choices=[('github', 'github'), ('gitlab', 'gitlab')], max_length=32)),
                ('owner', models.CharField(max_length=64)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=128)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identities', to='backend.group')),
            ],
        ),
        migrations.CreateModel(
            name='GroupUser',
            fields=[
                ('username', models.CharField(max_length=64)),
                ('is_admin', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='backend.group')),
            ],
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['owner'], name='backend_gro_owner_aebabe_idx'),
        ),
        migrations.AddField(
            model_name='event',
            name='identity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='backend.identity'),
        ),
        migrations.AddField(
            model_name='event',
            name='pipeline',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='backend.pipeline'),
        ),
        migrations.AddField(
            model_name='destination',
            name='credential',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend.credential'),
        ),
        migrations.AddField(
            model_name='credential',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.group'),
        ),
        migrations.AddField(
            model_name='context',
            name='credential',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.credential'),
        ),
        migrations.AddField(
            model_name='build',
            name='event',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend.event'),
        ),
        migrations.AddField(
            model_name='build',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='builds', to='backend.group'),
        ),
        migrations.AddField(
            model_name='build',
            name='pipeline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='builds', to='backend.pipeline'),
        ),
        migrations.AddField(
            model_name='action',
            name='auth',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.credential'),
        ),
        migrations.AddField(
            model_name='action',
            name='context',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.context'),
        ),
        migrations.AddField(
            model_name='action',
            name='destination',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.destination'),
        ),
        migrations.AddField(
            model_name='action',
            name='pipeline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='backend.pipeline'),
        ),
        migrations.AlterUniqueTogether(
            name='policy',
            unique_together={('group_id', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='identity',
            unique_together={('value', 'type', 'group_id')},
        ),
        migrations.AddIndex(
            model_name='groupuser',
            index=models.Index(fields=['username'], name='backend_gro_usernam_3feb97_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['pipeline_id'], name='backend_eve_pipelin_5ff4d0_idx'),
        ),
        migrations.AddIndex(
            model_name='build',
            index=models.Index(fields=['pipeline_id'], name='backend_bui_pipelin_59340f_idx'),
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['id', 'pipeline_id'], name='backend_act_id_8188cb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='action',
            unique_together={('id', 'pipeline_id')},
        ),
    ]
